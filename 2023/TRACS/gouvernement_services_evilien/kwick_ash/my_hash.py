import math
import hashlib

def trs(n):
    n%=2**20
    if n%2==1:
        r = 1
        for i in range((n//2)+1):
            r+=8*i
    else:
        r = 0
        for i in range((n//2)):
            r+=4*(2*i+1)
    return r

def doq2(p, n):
    if p == 0 or p == n:
        return 1
    return doq2(p-1, n-1) + doq2(p, n-1)

def doq(n):
    p = n%13
    n = p+((n//13)%13)
    return doq2(p, n)

def fyq(n):
    e = n%14983
    n %=2**40
    r = 1
    for i in range(e):
        r*=n
    return r

TCPY = [200, 217, 135, 42, 199, 179, 5, 51, 1, 251, 20, 9, 237, 136, 132, 188, 228, 243, 62, 191, 126, 32, 24, 176, 38, 182, 71, 218, 143, 68, 63, 245, 31, 222, 114, 253, 236, 146, 204, 206, 46, 76, 74, 128, 167, 210, 82, 89, 168, 26, 85, 224, 64, 186, 175, 165, 70, 43, 232, 208, 185, 111, 241, 226, 103, 216, 151, 133, 4, 223, 81, 93, 231, 75, 10, 248, 60, 78, 211, 139, 159, 235, 25, 101, 122, 58, 153, 158, 203, 100, 171, 96, 57, 109, 187, 169, 18, 87, 229, 242, 152, 0, 215, 72, 121, 105, 92, 95, 164, 219, 83, 145, 97, 36, 238, 47, 202, 134, 180, 201, 65, 166, 131, 234, 53, 147, 250, 50, 14, 183, 184, 142, 174, 195, 56, 11, 177, 213, 221, 124, 118, 155, 127, 140, 254, 189, 99, 88, 84, 13, 106, 55, 141, 27, 15, 148, 125, 160, 149, 94, 19, 163, 40, 29, 67, 157, 54, 144, 116, 230, 192, 44, 37, 220, 79, 172, 170, 113, 156, 212, 117, 249, 66, 17, 137, 244, 181, 21, 3, 161, 7, 48, 77, 33, 190, 247, 225, 227, 28, 2, 112, 8, 35, 246, 90, 209, 41, 98, 194, 197, 73, 162, 196, 6, 108, 61, 150, 102, 193, 115, 107, 178, 91, 240, 173, 80, 255, 86, 154, 59, 12, 130, 45, 214, 120, 123, 233, 239, 252, 205, 52, 129, 110, 34, 22, 69, 30, 16, 119, 104, 39, 49, 23, 138, 198, 207]

def soe(n):
    if n==0:
        n_size = 0
    else:
        n_size = int(math.log2(n)/8)
    for r in range(0, 4096):
        m=0
        for i in range(n_size):
            m*=256
            m+=TCPY[n%256]
            n//=256
        n=m
    return n

def img(n):
    H = hashlib.sha3_256(str(n).encode())
    h = H.digest()
    r = 0
    for i in range(len(str(h))):
        r*=256
        r+=ord(str(h)[i])
    return r

def my_hash(password):
    n = 0
    for i in password:
        n*=256
        n+=ord(i)
    H1 = trs(n)
    H2 = doq(n)
    H3 = fyq(n)
    H4 = soe(n)
    H5 = img(n)
    #print(H1%MOD)
    #print(H2%MOD)
    #print(H3%MOD)
    #print(H4%MOD)
    #print(H5%MOD)
    return str(hex((H1 ^ H2 ^ H3 ^ H4 ^ H5) % (2**40)))[2:]

print(my_hash("123456789"))
