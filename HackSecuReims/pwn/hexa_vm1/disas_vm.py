prgm = b'\xb0\x02\x00\x0f\xa1\x01\x16\x31\x02\x49\xc0\x02\x01\xd0\xb0\x02\x00\x1f\xa1\x01\x01\x31\x02\x5e\xc0\x02\x01\xd0\xb0\x02\x00\x0a\xa1\x01\x78\x11\x02\x19\xc0\x02\x01\xd0\xb0\x02\x00\x0c\xa1\x01\xbb\x11\x02\x53\xc0\x02\x01\xd0\xb0\x02\x00\x08\xa1\x01\x1e\x31\x02\x26\xc0\x02\x01\xd0\xb0\x02\x00\x17\xa1\x01\x27\x21\x02\x0d\xc0\x02\x01\xd0\xb0\x02\x00\x16\xa1\x01\xbd\x11\x02\x55\xc0\x02\x01\xd0\xb0\x02\x00\x0e\xa1\x01\x18\x31\x02\x6b\xc0\x02\x01\xd0\xb0\x02\x00\x12\xa1\x01\x2c\x21\x02\x49\xc0\x02\x01\xd0\xb0\x02\x00\x2a\xa1\x01\xb8\x11\x02\x54\xc0\x02\x01\xd0\xb0\x02\x00\x22\xa1\x01\x6c\x31\x02\x1f\xc0\x02\x01\xd0\xb0\x02\x00\x0d\xa1\x01\x31\x11\x02\x00\xc0\x02\x01\xd0\xb0\x02\x00\x2b\xa1\x01\x21\x31\x02\x11\xc0\x02\x01\xd0\xb0\x02\x00\x09\xa1\x01\x0e\x21\x02\x28\xc0\x02\x01\xd0\xb0\x02\x00\x18\xa1\x01\xd5\x11\x02\x5f\xc0\x02\x01\xd0\xb0\x02\x00\x05\xa1\x01\xc2\x11\x02\x54\xc0\x02\x01\xd0\xb0\x02\x00\x10\xa1\x01\xe5\x11\x02\x6e\xc0\x02\x01\xd0\xb0\x02\x00\x24\xa1\x01\x8c\x11\x02\x2d\xc0\x02\x01\xd0\xb0\x02\x00\x07\xa1\x01\x4f\x21\x02\x29\xc0\x02\x01\xd0\xb0\x02\x00\x1a\xa1\x01\x27\x21\x02\x38\xc0\x02\x01\xd0\xb0\x02\x00\x27\xa1\x01\x77\x11\x02\x0b\xc0\x02\x01\xd0\xb0\x02\x00\x2e\xa1\x01\xee\x11\x02\x71\xc0\x02\x01\xd0\xb0\x02\x00\x13\xa1\x01\xbd\x11\x02\x51\xc0\x02\x01\xd0\xb0\x02\x00\x11\xa1\x01\x3a\x11\x02\x0a\xc0\x02\x01\xd0\xb0\x02\x00\x1e\xa1\x01\x6e\x21\x02\x00\xc0\x02\x01\xd0\xb0\x02\x00\x15\xa1\x01\x93\x11\x02\x34\xc0\x02\x01\xd0\xb0\x02\x00\x04\xa1\x01\x1e\x21\x02\x13\xc0\x02\x01\xd0\xb0\x02\x00\x23\xa1\x01\x6d\x31\x02\x14\xc0\x02\x01\xd0\xb0\x02\x00\x02\xa1\x01\x92\x11\x02\x40\xc0\x02\x01\xd0\xb0\x02\x00\x14\xa1\x01\x90\x11\x02\x2c\xc0\x02\x01\xd0\xb0\x02\x00\x2c\xa1\x01\x55\x31\x02\x3b\xc0\x02\x01\xd0\xb0\x02\x00\x0b\xa1\x01\x79\x31\x02\x0d\xc0\x02\x01\xd0\xb0\x02\x00\x19\xa1\x01\x80\x11\x02\x1b\xc0\x02\x01\xd0\xb0\x02\x00\x00\xa1\x01\x1a\x21\x02\x2e\xc0\x02\x01\xd0\xb0\x02\x00\x03\xa1\x01\x52\x21\x02\x29\xc0\x02\x01\xd0\xb0\x02\x00\x26\xa1\x01\x15\x31\x02\x26\xc0\x02\x01\xd0\xb0\x02\x00\x28\xa1\x01\x5e\x21\x02\x0e\xc0\x02\x01\xd0\xb0\x02\x00\x29\xa1\x01\x7e\x31\x02\x21\xc0\x02\x01\xd0\xb0\x02\x00\x20\xa1\x01\x1d\x21\x02\x48\xc0\x02\x01\xd0\xb0\x02\x00\x2d\xa1\x01\x51\x21\x02\x14\xc0\x02\x01\xd0\xb0\x02\x00\x21\xa1\x01\x6b\x11\x02\x0a\xc0\x02\x01\xd0\xb0\x02\x00\x06\xa1\x01\x6c\x11\x02\x0d\xc0\x02\x01\xd0\xb0\x02\x00\x1c\xa1\x01\x23\x21\x02\x10\xc0\x02\x01\xd0\xb0\x02\x00\x1b\xa1\x01\x60\x31\x02\x02\xc0\x02\x01\xd0\xb0\x02\x00\x1d\xa1\x01\x39\x11\x02\x06\xc0\x02\x01\xd0\xb0\x02\x00\x01\xa1\x01\x90\x11\x02\x3d\xc0\x02\x01\xd0\xb0\x02\x00\x25\xa1\x01\xa0\x11\x02\x29\xc0\x02\x01\xd0\xa1\x00\x00\xe0'


pc = 0
R1 = 0
R2 = 0
chars = {}
while pc < len(prgm):
    match prgm[pc]:
        case 0x10:
            print(f'{pc} : add_reg R_{prgm[pc+1]}, R_{prgm[pc+2]}')
            pc += 3
        case 0x11:
            print(f'{pc} : add_imm R_{prgm[pc+1]}, {prgm[pc+2]}')
            R2 = abs(R1 - prgm[pc+2])
            pc += 3
        case 0x20:
            print(f'{pc} : sub_reg R_{prgm[pc+1]}, R_{prgm[pc+2]}')
            pc += 3
        case 0x21:
            print(f'{pc} : sub_imm R_{prgm[pc+1]}, {prgm[pc+2]}')
            R2 = R1 + prgm[pc+2]
            pc += 3
        case 0x30:
            print(f'{pc} : xor_reg R_{prgm[pc+1]}, R_{prgm[pc+2]}')
            pc += 3
        case 0x31:
            print(f'{pc} : xor_imm R_{prgm[pc+1]}, {prgm[pc+2]}')
            R2 = R1 ^ prgm[pc+2]
            pc += 3
        case 0xa0:
            print(f'{pc} : mov_reg R_{prgm[pc+1]}, R_{prgm[pc+2]}')
            pc += 3
        case 0xa1:
            print(f'{pc} : mov_imm R_{prgm[pc+1]}, {prgm[pc+2]}')
            R1 = prgm[pc+2]
            pc += 3
        case 0xb0:
            print(f'{pc} : gotochar {prgm[pc+3]}')
            i = prgm[pc+3]
            pc += 4

        #J'ai pas fait tous les opcodes car c'est useless
        case 0xb1:
            print("-----")
            pc += 3
        case 0xb2:
            print("-----")
            pc += 4
        case 0xc0:
            print(f'{pc} : cmp_reg R_{prgm[pc+1]}, R_{prgm[pc+2]}')
            chars[i] =chr(R2%256)
            R1 = 0
            R2 = 0
            pc += 3
        case 0xd0:
            print(f'{pc} : early exit {prgm[pc+1]}')
            pc += 1
        case 0xe0:
            print("normal exit")
            pc += 1
        case 0xf0:
            print(f'{pc} : sys_open {prgm[pc+1]}')
            pc += 2
        case 0xf1:
            print("-----")
            pc += 4
        case 0xf2:
            print("-----")
            pc += 4
        case 0xf3:
            print("-----")
            pc += 2
        case _:
            print("????")
            pc+=1

sorted_chars = dict(sorted(chars.items())).values()

print(''.join(sorted_chars))
